{"version":3,"file":"ngneat-until-destroy.umd.js","sources":["ng://@ngneat/until-destroy/lib/ivy.ts","ng://@ngneat/until-destroy/lib/internals.ts","ng://@ngneat/until-destroy/lib/until-destroy.ts","ng://@ngneat/until-destroy/lib/until-destroyed.ts"],"sourcesContent":["import {\n  Type,\n  InjectableType,\n  ɵNG_DIR_DEF,\n  ɵNG_COMP_DEF,\n  ɵNG_PIPE_DEF,\n  ɵNG_PROV_DEF,\n  ɵComponentType as ComponentType,\n  ɵDirectiveType as DirectiveType,\n  ɵPipeDef as PipeDef,\n  ɵComponentDef as ComponentDef,\n  ɵDirectiveDef as DirectiveDef\n} from '@angular/core';\n\n// This is done for type-safety and to make compiler happy\n// because definition property names are exported as `string`,\n// thus it throws `ɵNG_COMP_DEF can't be used to index type 'ɵComponentType<T>'.`\nconst NG_DIR_DEF = ɵNG_DIR_DEF as 'ɵdir';\nconst NG_COMP_DEF = ɵNG_COMP_DEF as 'ɵcmp';\nconst NG_PIPE_DEF = ɵNG_PIPE_DEF as 'ɵpipe';\n\n// Angular doesn't expose publicly `PipeType` but it actually has it.\nexport interface PipeType<T> extends Type<T> {\n  ɵpipe: never;\n}\n\n// As directive and component definitions are considered private API,\n// so those properties are prefixed with Angular's marker for \"private\".\nexport function getDef<T>(\n  type: PipeType<T> | ComponentType<T> | DirectiveType<T>\n): PipeDef<T> | DirectiveDef<T> | ComponentDef<T> {\n  return (\n    (type as PipeType<T>)[NG_PIPE_DEF] ||\n    (type as ComponentType<T>)[NG_COMP_DEF] ||\n    (type as DirectiveType<T>)[NG_DIR_DEF]\n  );\n}\n\nexport function getDefName<T>(type: PipeType<T> | ComponentType<T> | DirectiveType<T>) {\n  if (type.hasOwnProperty(NG_PIPE_DEF)) {\n    return NG_PIPE_DEF;\n  } else if (type.hasOwnProperty(NG_COMP_DEF)) {\n    return NG_COMP_DEF;\n  } else {\n    return NG_DIR_DEF;\n  }\n}\n\n// Determines whether the provided `target` is some function\n// decorated with `@Injectable()`.\nexport function isInjectableType(target: any): target is InjectableType<never> {\n  return !!target[ɵNG_PROV_DEF];\n}\n","import {\n  InjectableType,\n  ɵPipeDef as PipeDef,\n  ɵComponentDef as ComponentDef,\n  ɵDirectiveDef as DirectiveDef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { getDef, isInjectableType } from './ivy';\n\nexport function isFunction(target: unknown) {\n  return typeof target === 'function';\n}\n\n/**\n * Applied to instances and stores `Subject` instance when\n * no custom destroy method is provided.\n */\nconst DESTROY: unique symbol = Symbol('__destroy');\n\n/**\n * Applied to definitions and informs that class is decorated\n */\nconst DECORATOR_APPLIED: unique symbol = Symbol('__decoratorApplied');\n\n/**\n * If we use the `untilDestroyed` operator multiple times inside the single\n * instance providing different `destroyMethodName`, then all streams will\n * subscribe to the single subject. If any method is invoked, the subject will\n * emit and all streams will be unsubscribed. We wan't to prevent this behavior,\n * thus we store subjects under different symbols.\n */\nexport function getSymbol<T>(destroyMethodName?: keyof T): symbol {\n  if (typeof destroyMethodName === 'string') {\n    return Symbol(`__destroy__${destroyMethodName}`);\n  } else {\n    return DESTROY;\n  }\n}\n\nexport function missingDecorator<T>(\n  providerOrDef: InjectableType<T> | PipeDef<T> | ComponentDef<T> | DirectiveDef<T>\n): boolean {\n  return !(providerOrDef as any)[DECORATOR_APPLIED];\n}\n\nexport function markAsDecorated<T>(\n  providerOrDef: InjectableType<T> | PipeDef<T> | ComponentDef<T> | DirectiveDef<T>\n): void {\n  (providerOrDef as any)[DECORATOR_APPLIED] = true;\n}\n\nexport interface UntilDestroyOptions {\n  blackList?: string[];\n  arrayName?: string;\n  checkProperties?: boolean;\n}\n\nexport function ensureClassIsDecorated(instance: any): never | void {\n  const constructor = instance.constructor;\n  const providerOrDef = isInjectableType(constructor) ? constructor : getDef(constructor);\n\n  if (missingDecorator(providerOrDef)) {\n    throw new Error(\n      'untilDestroyed operator cannot be used inside directives or ' +\n        'components or providers that are not decorated with UntilDestroy decorator'\n    );\n  }\n}\n\nexport function createSubjectOnTheInstance(instance: any, symbol: symbol): void {\n  if (!instance[symbol]) {\n    instance[symbol] = new Subject<void>();\n  }\n}\n\nexport function completeSubjectOnTheInstance(instance: any, symbol: symbol): void {\n  if (instance[symbol]) {\n    instance[symbol].next();\n    instance[symbol].complete();\n    // We also have to re-assign this property thus in the future\n    // we will be able to create new subject on the same instance.\n    instance[symbol] = null;\n  }\n}\n","import {\n  InjectableType,\n  ɵComponentType as ComponentType,\n  ɵDirectiveType as DirectiveType\n} from '@angular/core';\nimport { SubscriptionLike } from 'rxjs';\n\nimport {\n  getSymbol,\n  isFunction,\n  markAsDecorated,\n  missingDecorator,\n  UntilDestroyOptions,\n  completeSubjectOnTheInstance\n} from './internals';\nimport { PipeType, getDef, getDefName, isInjectableType } from './ivy';\n\nfunction unsubscribe(property: SubscriptionLike | undefined): void {\n  property && isFunction(property.unsubscribe) && property.unsubscribe();\n}\n\nfunction unsubscribeIfPropertyIsArrayLike(property: any[]): void {\n  Array.isArray(property) && property.forEach(unsubscribe);\n}\n\nfunction decorateNgOnDestroy(\n  ngOnDestroy: (() => void) | null | undefined,\n  { arrayName, checkProperties, blackList }: UntilDestroyOptions\n) {\n  return function(this: any) {\n    // Invoke the original `ngOnDestroy` if it exists\n    ngOnDestroy && ngOnDestroy.call(this);\n\n    // It's important to use `this` instead of caching instance\n    // that may lead to memory leaks\n    completeSubjectOnTheInstance(this, getSymbol());\n\n    // Check if subscriptions are pushed to some array\n    if (arrayName) {\n      return unsubscribeIfPropertyIsArrayLike(this[arrayName]);\n    }\n\n    // Loop through the properties and find subscriptions\n    if (checkProperties) {\n      for (const property in this) {\n        if (blackList && blackList.includes(property)) {\n          continue;\n        }\n\n        unsubscribe(this[property]);\n      }\n    }\n  };\n}\n\n/**\n * Services do not have definitions, thus we just have to override the\n * prototype property in Ivy\n */\nfunction decorateProvider(type: InjectableType<unknown>, options: UntilDestroyOptions): void {\n  type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n  markAsDecorated(type);\n}\n\n/**\n * https://github.com/ngneat/until-destroy/issues/78\n * Some declared components or directives may be compiled asynchronously in JIT,\n * especially those that're lazy-loaded. And thus may have their\n * definition not accessible yet.\n */\nfunction decorateDeclarableJIT<T>(\n  type: PipeType<T> | ComponentType<T> | DirectiveType<T>,\n  options: UntilDestroyOptions\n) {\n  const defName = getDefName(type);\n  const getter = Object.getOwnPropertyDescriptor(type, defName)!.get!;\n\n  Object.defineProperty(type, defName, {\n    get() {\n      const def = getter();\n\n      if (missingDecorator(def)) {\n        (def as { onDestroy: () => void }).onDestroy = decorateNgOnDestroy(\n          def.onDestroy,\n          options\n        );\n        markAsDecorated(def);\n      }\n\n      return def;\n    }\n  });\n}\n\nfunction decorateDeclarable<T>(\n  type: PipeType<T> | ComponentType<T> | DirectiveType<T>,\n  options: UntilDestroyOptions\n) {\n  const isJIT = type.hasOwnProperty('__annotations__');\n\n  if (isJIT) {\n    decorateDeclarableJIT(type, options);\n  } else {\n    const def = getDef(type);\n    (def as { onDestroy: () => void }).onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n    markAsDecorated(def);\n  }\n}\n\nexport function UntilDestroy(options: UntilDestroyOptions = {}): ClassDecorator {\n  return (target: any) => {\n    if (isInjectableType(target)) {\n      decorateProvider(target, options);\n    } else {\n      decorateDeclarable(target, options);\n    }\n  };\n}\n","import { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  getSymbol,\n  isFunction,\n  createSubjectOnTheInstance,\n  completeSubjectOnTheInstance,\n  ensureClassIsDecorated\n} from './internals';\n\nfunction overrideNonDirectiveInstanceMethod(\n  instance: any,\n  destroyMethodName: string,\n  symbol: symbol\n): void {\n  const originalDestroy = instance[destroyMethodName];\n\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n    );\n  }\n\n  createSubjectOnTheInstance(instance, symbol);\n\n  instance[destroyMethodName] = function() {\n    isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n    completeSubjectOnTheInstance(this, symbol);\n    // We have to re-assign this property back to the original value.\n    // If the `untilDestroyed` operator is called for the same instance\n    // multiple times, then we will be able to get the original\n    // method again and not the patched one.\n    instance[destroyMethodName] = originalDestroy;\n  };\n}\n\nexport function untilDestroyed<T>(instance: T, destroyMethodName?: keyof T) {\n  return <U>(source: Observable<U>) => {\n    const symbol = getSymbol<T>(destroyMethodName);\n\n    // If `destroyMethodName` is passed then the developer applies\n    // this operator to something non-related to Angular DI system\n    if (typeof destroyMethodName === 'string') {\n      overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol);\n    } else {\n      ensureClassIsDecorated(instance);\n      createSubjectOnTheInstance(instance, symbol);\n    }\n\n    return source.pipe(takeUntil<U>((instance as any)[symbol]));\n  };\n}\n"],"names":["ɵNG_DIR_DEF","ɵNG_COMP_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","Subject","takeUntil"],"mappings":"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"}