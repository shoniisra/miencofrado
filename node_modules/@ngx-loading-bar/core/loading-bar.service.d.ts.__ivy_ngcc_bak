import { LoadingBarState } from './loading-bar.state';
import { LoadingBarConfig } from './loading-bar.config';
export declare class LoadingBarService {
    private platformId;
    private config;
    private refs;
    private streams$;
    readonly value$: import("rxjs").Observable<number>;
    /** @deprecated use `value$` instead. */
    get progress$(): import("rxjs").Observable<number>;
    constructor(platformId: Object, config?: LoadingBarConfig);
    /** @deprecated use `useRef` instead. */
    start(initialValue?: number): void;
    /** @deprecated use `useRef` instead. */
    set(value: number): void;
    /** @deprecated use `useRef` instead. */
    increment(value?: number): void;
    /** @deprecated use `useRef` instead. */
    complete(): void;
    /** @deprecated use `useRef` instead. */
    stop(): void;
    useRef(id?: string): LoadingBarState;
}
