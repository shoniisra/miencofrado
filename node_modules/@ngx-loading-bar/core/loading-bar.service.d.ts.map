{"version":3,"file":"loading-bar.service.d.ts","sources":["loading-bar.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { LoadingBarState } from './loading-bar.state';\nimport { LoadingBarConfig } from './loading-bar.config';\nexport declare class LoadingBarService {\n    private platformId;\n    private config;\n    private refs;\n    private streams$;\n    readonly value$: import(\"rxjs\").Observable<number>;\n    /** @deprecated use `value$` instead. */\n    get progress$(): import(\"rxjs\").Observable<number>;\n    constructor(platformId: Object, config?: LoadingBarConfig);\n    /** @deprecated use `useRef` instead. */\n    start(initialValue?: number): void;\n    /** @deprecated use `useRef` instead. */\n    set(value: number): void;\n    /** @deprecated use `useRef` instead. */\n    increment(value?: number): void;\n    /** @deprecated use `useRef` instead. */\n    complete(): void;\n    /** @deprecated use `useRef` instead. */\n    stop(): void;\n    useRef(id?: string): LoadingBarState;\n}\n"]}