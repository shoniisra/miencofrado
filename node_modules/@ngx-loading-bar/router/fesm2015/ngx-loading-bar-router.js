import { __decorate, __metadata } from 'tslib';
import { NgModule } from '@angular/core';
import { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, Router, RouterModule } from '@angular/router';
import { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';

let LoadingBarRouterModule = class LoadingBarRouterModule {
    constructor(router, loader) {
        const ref = loader.useRef('router');
        router.events.subscribe((event) => {
            const navState = this.getCurrentNavigationState(router);
            if (navState && navState.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                ref.start();
            }
            if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {
                ref.complete();
            }
        });
    }
    getCurrentNavigationState(router) {
        // `getCurrentNavigation` only available in angular `7.2`
        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    }
};
LoadingBarRouterModule.ctorParameters = () => [
    { type: Router },
    { type: LoadingBarService }
];
LoadingBarRouterModule = __decorate([
    NgModule({
        imports: [RouterModule, LoadingBarModule],
        exports: [RouterModule, LoadingBarModule],
    }),
    __metadata("design:paramtypes", [Router, LoadingBarService])
], LoadingBarRouterModule);

/**
 * Generated bundle index. Do not edit.
 */

export { LoadingBarRouterModule };
//# sourceMappingURL=ngx-loading-bar-router.js.map
