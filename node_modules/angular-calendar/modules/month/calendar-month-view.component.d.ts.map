{"version":3,"file":"calendar-month-view.component.d.ts","sources":["calendar-month-view.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnChanges, EventEmitter, ChangeDetectorRef, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { CalendarEvent, WeekDay, MonthView, MonthViewDay, ViewPeriod } from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { PlacementArray } from 'positioning';\nexport interface CalendarMonthViewBeforeRenderEvent {\n    header: WeekDay[];\n    body: MonthViewDay[];\n    period: ViewPeriod;\n}\nexport interface CalendarMonthViewEventTimesChangedEvent<EventMetaType = any, DayMetaType = any> extends CalendarEventTimesChangedEvent<EventMetaType> {\n    day: MonthViewDay<DayMetaType>;\n}\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\nexport declare class CalendarMonthViewComponent implements OnChanges, OnInit, OnDestroy {\n    protected cdr: ChangeDetectorRef;\n    protected utils: CalendarUtils;\n    protected dateAdapter: DateAdapter;\n    /**\n     * The current view date\n     */\n    viewDate: Date;\n    /**\n     * An array of events to display on view.\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n    events: CalendarEvent[];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n    excludeDays: number[];\n    /**\n     * Whether the events list for the day of the `viewDate` option is visible or not\n     */\n    activeDayIsOpen: boolean;\n    /**\n     * If set will be used to determine the day that should be open. If not set, the `viewDate` is used\n     */\n    activeDay: Date;\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    refresh: Subject<any>;\n    /**\n     * The locale used to format dates\n     */\n    locale: string;\n    /**\n     * The placement of the event tooltip\n     */\n    tooltipPlacement: PlacementArray;\n    /**\n     * A custom template to use for the event tooltips\n     */\n    tooltipTemplate: TemplateRef<any>;\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n    tooltipAppendToBody: boolean;\n    /**\n     * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n     * will be displayed immediately.\n     */\n    tooltipDelay: number | null;\n    /**\n     * The start number of the week\n     */\n    weekStartsOn: number;\n    /**\n     * A custom template to use to replace the header\n     */\n    headerTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use to replace the day cell\n     */\n    cellTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for the slide down box of events for the active day\n     */\n    openDayEventsTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for event titles\n     */\n    eventTitleTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for event actions\n     */\n    eventActionsTemplate: TemplateRef<any>;\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n     */\n    weekendDays: number[];\n    /**\n     * An output that will be called before the view is rendered for the current month.\n     * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n     */\n    beforeViewRender: EventEmitter<CalendarMonthViewBeforeRenderEvent>;\n    /**\n     * Called when the day cell is clicked\n     */\n    dayClicked: EventEmitter<{\n        day: MonthViewDay<any>;\n        sourceEvent: MouseEvent | KeyboardEvent;\n    }>;\n    /**\n     * Called when the event title is clicked\n     */\n    eventClicked: EventEmitter<{\n        event: CalendarEvent<any>;\n        sourceEvent: MouseEvent | KeyboardEvent;\n    }>;\n    /**\n     * Called when a header week day is clicked. Returns ISO day number.\n     */\n    columnHeaderClicked: EventEmitter<{\n        isoDayNumber: number;\n        sourceEvent: MouseEvent | KeyboardEvent;\n    }>;\n    /**\n     * Called when an event is dragged and dropped\n     */\n    eventTimesChanged: EventEmitter<CalendarMonthViewEventTimesChangedEvent<any, any>>;\n    /**\n     * @hidden\n     */\n    columnHeaders: WeekDay[];\n    /**\n     * @hidden\n     */\n    view: MonthView;\n    /**\n     * @hidden\n     */\n    openRowIndex: number;\n    /**\n     * @hidden\n     */\n    openDay: MonthViewDay;\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n    /**\n     * @hidden\n     */\n    constructor(cdr: ChangeDetectorRef, utils: CalendarUtils, locale: string, dateAdapter: DateAdapter);\n    /**\n     * @hidden\n     */\n    trackByRowOffset: (index: number, offset: number) => string;\n    /**\n     * @hidden\n     */\n    trackByDate: (index: number, day: MonthViewDay<any>) => string;\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void;\n    /**\n     * @hidden\n     */\n    eventDropped(droppedOn: MonthViewDay, event: CalendarEvent, draggedFrom?: MonthViewDay): void;\n    protected refreshHeader(): void;\n    protected refreshBody(): void;\n    protected checkActiveDayIsOpen(): void;\n    protected refreshAll(): void;\n    protected emitBeforeViewRender(): void;\n}\n"]}