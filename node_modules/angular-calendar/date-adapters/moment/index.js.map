{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../projects/angular-calendar/src/date-adapters/moment/index.ts"],"names":[],"mappings":";;;AAAA,8DAA2F;AAG3F,SAAgB,cAAc,CAAC,MAAM;IACnC,6CACK,uBAAkB,CAAC,MAAM,CAAC,KAE7B,QAAQ,EAAR,UAAS,IAAmB,EAAE,MAAc;YAC1C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,CAAC;QAED,SAAS,EAAT,UAAU,IAAmB,EAAE,MAAc;YAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QACrD,CAAC;QAED,OAAO,EAAP,UAAQ,IAAmB,EAAE,MAAc;YACzC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QACxD,CAAC;QAED,QAAQ,EAAR,UAAS,IAAmB,EAAE,MAAc;YAC1C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACzD,CAAC;QAED,SAAS,EAAT,UAAU,IAAmB,EAAE,MAAc;YAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1D,CAAC;QAED,UAAU,EAAV,UAAW,IAAmB;YAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;QAED,OAAO,EAAP,UAAQ,IAAmB,EAAE,UAAkB;YAC7C,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;QAChD,CAAC;QAED,QAAQ,EAAR,UAAS,IAAmB,EAAE,KAAa;YACzC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5C,CAAC;QAED,OAAO,EAAP,UAAQ,IAAmB,EAAE,IAAY;YACvC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1C,CAAC;QAED,OAAO,EAAP,UAAQ,IAAmB;YACzB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAED,OAAO,EAAP,UAAQ,IAAmB;YACzB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,IACD;AACJ,CAAC;AAhDD,wCAgDC","sourcesContent":["import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/moment';\nimport { DateAdapter } from '../date-adapter';\n\nexport function adapterFactory(moment): DateAdapter {\n  return {\n    ...baseAdapterFactory(moment),\n\n    addWeeks(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'weeks').toDate();\n    },\n\n    addMonths(date: Date | number, amount: number): Date {\n      return moment(date).add(amount, 'months').toDate();\n    },\n\n    subDays(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'days').toDate();\n    },\n\n    subWeeks(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'weeks').toDate();\n    },\n\n    subMonths(date: Date | number, amount: number): Date {\n      return moment(date).subtract(amount, 'months').toDate();\n    },\n\n    getISOWeek(date: Date | number): number {\n      return moment(date).isoWeek();\n    },\n\n    setDate(date: Date | number, dayOfMonth: number): Date {\n      return moment(date).date(dayOfMonth).toDate();\n    },\n\n    setMonth(date: Date | number, month: number): Date {\n      return moment(date).month(month).toDate();\n    },\n\n    setYear(date: Date | number, year: number): Date {\n      return moment(date).year(year).toDate();\n    },\n\n    getDate(date: Date | number): number {\n      return moment(date).date();\n    },\n\n    getYear(date: Date | number): number {\n      return moment(date).year();\n    },\n  };\n}\n"]}