import { isInsideLeftAndRight, isWithinThreshold } from './util';
var CalendarDragHelper = /** @class */ (function () {
    function CalendarDragHelper(dragContainerElement, draggableElement) {
        this.dragContainerElement = dragContainerElement;
        this.startPosition = draggableElement.getBoundingClientRect();
    }
    CalendarDragHelper.prototype.validateDrag = function (_a) {
        var x = _a.x, y = _a.y, snapDraggedEvents = _a.snapDraggedEvents, dragAlreadyMoved = _a.dragAlreadyMoved, transform = _a.transform;
        var isDraggedWithinThreshold = isWithinThreshold({ x: x, y: y }) || dragAlreadyMoved;
        if (snapDraggedEvents) {
            var inner = Object.assign({}, this.startPosition, {
                left: this.startPosition.left + transform.x,
                right: this.startPosition.right + transform.x,
                top: this.startPosition.top + transform.y,
                bottom: this.startPosition.bottom + transform.y,
            });
            if (isDraggedWithinThreshold) {
                var outer = this.dragContainerElement.getBoundingClientRect();
                var isTopInside = outer.top < inner.top && inner.top < outer.bottom;
                var isBottomInside = outer.top < inner.bottom && inner.bottom < outer.bottom;
                return (isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside));
            }
            /* istanbul ignore next */
            return false;
        }
        else {
            return isDraggedWithinThreshold;
        }
    };
    return CalendarDragHelper;
}());
export { CalendarDragHelper };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItZHJhZy1oZWxwZXIucHJvdmlkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWNhbGVuZGFyLyIsInNvdXJjZXMiOlsibW9kdWxlcy9jb21tb24vY2FsZW5kYXItZHJhZy1oZWxwZXIucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG9CQUFvQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBR2pFO0lBR0UsNEJBQ1Usb0JBQWlDLEVBQ3pDLGdCQUE2QjtRQURyQix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQWE7UUFHekMsSUFBSSxDQUFDLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQ2hFLENBQUM7SUFFRCx5Q0FBWSxHQUFaLFVBQWEsRUFZWjtZQVhDLFFBQUMsRUFDRCxRQUFDLEVBQ0Qsd0NBQWlCLEVBQ2pCLHNDQUFnQixFQUNoQix3QkFBUztRQVFULElBQU0sd0JBQXdCLEdBQzVCLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxHQUFBLEVBQUUsQ0FBQyxHQUFBLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixDQUFDO1FBRWxELElBQUksaUJBQWlCLEVBQUU7WUFDckIsSUFBTSxLQUFLLEdBQWUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRTtnQkFDOUQsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFDO2dCQUMzQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLENBQUM7Z0JBQzdDLEdBQUcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQztnQkFDekMsTUFBTSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxDQUFDO2FBQ2hELENBQUMsQ0FBQztZQUVILElBQUksd0JBQXdCLEVBQUU7Z0JBQzVCLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO2dCQUVoRSxJQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxHQUFHLElBQUksS0FBSyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO2dCQUV0RSxJQUFNLGNBQWMsR0FDbEIsS0FBSyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztnQkFFMUQsT0FBTyxDQUNMLG9CQUFvQixDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxjQUFjLENBQUMsQ0FDdEUsQ0FBQzthQUNIO1lBRUQsMEJBQTBCO1lBQzFCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7YUFBTTtZQUNMLE9BQU8sd0JBQXdCLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBQ0gseUJBQUM7QUFBRCxDQUFDLEFBckRELElBcURDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNJbnNpZGVMZWZ0QW5kUmlnaHQsIGlzV2l0aGluVGhyZXNob2xkIH0gZnJvbSAnLi91dGlsJztcbmltcG9ydCB7IFZhbGlkYXRlRHJhZ1BhcmFtcyB9IGZyb20gJ2FuZ3VsYXItZHJhZ2dhYmxlLWRyb3BwYWJsZSc7XG5cbmV4cG9ydCBjbGFzcyBDYWxlbmRhckRyYWdIZWxwZXIge1xuICBwcml2YXRlIHJlYWRvbmx5IHN0YXJ0UG9zaXRpb246IENsaWVudFJlY3Q7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkcmFnQ29udGFpbmVyRWxlbWVudDogSFRNTEVsZW1lbnQsXG4gICAgZHJhZ2dhYmxlRWxlbWVudDogSFRNTEVsZW1lbnRcbiAgKSB7XG4gICAgdGhpcy5zdGFydFBvc2l0aW9uID0gZHJhZ2dhYmxlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgfVxuXG4gIHZhbGlkYXRlRHJhZyh7XG4gICAgeCxcbiAgICB5LFxuICAgIHNuYXBEcmFnZ2VkRXZlbnRzLFxuICAgIGRyYWdBbHJlYWR5TW92ZWQsXG4gICAgdHJhbnNmb3JtLFxuICB9OiB7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcbiAgICBzbmFwRHJhZ2dlZEV2ZW50czogYm9vbGVhbjtcbiAgICBkcmFnQWxyZWFkeU1vdmVkOiBib29sZWFuO1xuICAgIHRyYW5zZm9ybTogVmFsaWRhdGVEcmFnUGFyYW1zWyd0cmFuc2Zvcm0nXTtcbiAgfSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGlzRHJhZ2dlZFdpdGhpblRocmVzaG9sZCA9XG4gICAgICBpc1dpdGhpblRocmVzaG9sZCh7IHgsIHkgfSkgfHwgZHJhZ0FscmVhZHlNb3ZlZDtcblxuICAgIGlmIChzbmFwRHJhZ2dlZEV2ZW50cykge1xuICAgICAgY29uc3QgaW5uZXI6IENsaWVudFJlY3QgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXJ0UG9zaXRpb24sIHtcbiAgICAgICAgbGVmdDogdGhpcy5zdGFydFBvc2l0aW9uLmxlZnQgKyB0cmFuc2Zvcm0ueCxcbiAgICAgICAgcmlnaHQ6IHRoaXMuc3RhcnRQb3NpdGlvbi5yaWdodCArIHRyYW5zZm9ybS54LFxuICAgICAgICB0b3A6IHRoaXMuc3RhcnRQb3NpdGlvbi50b3AgKyB0cmFuc2Zvcm0ueSxcbiAgICAgICAgYm90dG9tOiB0aGlzLnN0YXJ0UG9zaXRpb24uYm90dG9tICsgdHJhbnNmb3JtLnksXG4gICAgICB9KTtcblxuICAgICAgaWYgKGlzRHJhZ2dlZFdpdGhpblRocmVzaG9sZCkge1xuICAgICAgICBjb25zdCBvdXRlciA9IHRoaXMuZHJhZ0NvbnRhaW5lckVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgY29uc3QgaXNUb3BJbnNpZGUgPSBvdXRlci50b3AgPCBpbm5lci50b3AgJiYgaW5uZXIudG9wIDwgb3V0ZXIuYm90dG9tO1xuXG4gICAgICAgIGNvbnN0IGlzQm90dG9tSW5zaWRlID1cbiAgICAgICAgICBvdXRlci50b3AgPCBpbm5lci5ib3R0b20gJiYgaW5uZXIuYm90dG9tIDwgb3V0ZXIuYm90dG9tO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgaXNJbnNpZGVMZWZ0QW5kUmlnaHQob3V0ZXIsIGlubmVyKSAmJiAoaXNUb3BJbnNpZGUgfHwgaXNCb3R0b21JbnNpZGUpXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBpc0RyYWdnZWRXaXRoaW5UaHJlc2hvbGQ7XG4gICAgfVxuICB9XG59XG4iXX0=