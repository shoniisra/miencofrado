{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-calendar/modules/common/calendar-view.enum.ts","ng://angular-calendar/modules/common/calendar-event-actions.component.ts","ng://angular-calendar/modules/common/calendar-event-title.component.ts","ng://angular-calendar/modules/common/calendar-tooltip.directive.ts","ng://angular-calendar/date-adapters/date-adapter.ts","ng://angular-calendar/modules/common/util.ts","ng://angular-calendar/modules/common/calendar-event-times-changed-event.interface.ts","ng://angular-calendar/modules/common/calendar-previous-view.directive.ts","ng://angular-calendar/modules/common/calendar-next-view.directive.ts","ng://angular-calendar/modules/common/calendar-today.directive.ts","ng://angular-calendar/modules/common/calendar-angular-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date.pipe.ts","ng://angular-calendar/modules/common/calendar-event-title-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-title.pipe.ts","ng://angular-calendar/modules/common/click.directive.ts","ng://angular-calendar/modules/common/keydown-enter.directive.ts","ng://angular-calendar/modules/common/calendar-utils.provider.ts","ng://angular-calendar/modules/common/calendar-a11y.provider.ts","ng://angular-calendar/modules/common/calendar-a11y.pipe.ts","ng://angular-calendar/modules/common/calendar-moment-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-native-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-common.module.ts","ng://angular-calendar/modules/month/calendar-month-view.component.ts","ng://angular-calendar/modules/month/calendar-month-view-header.component.ts","ng://angular-calendar/modules/month/calendar-month-cell.component.ts","ng://angular-calendar/modules/month/calendar-open-day-events.component.ts","ng://angular-calendar/modules/month/calendar-month.module.ts","ng://angular-calendar/modules/common/calendar-drag-helper.provider.ts","ng://angular-calendar/modules/common/calendar-resize-helper.provider.ts","ng://angular-calendar/modules/week/calendar-week-view.component.ts","ng://angular-calendar/modules/week/calendar-week-view-header.component.ts","ng://angular-calendar/modules/week/calendar-week-view-event.component.ts","ng://angular-calendar/modules/week/calendar-week-view-hour-segment.component.ts","ng://angular-calendar/modules/week/calendar-week-view-current-time-marker.component.ts","ng://angular-calendar/modules/week/calendar-week.module.ts","ng://angular-calendar/modules/day/calendar-day-view.component.ts","ng://angular-calendar/modules/day/calendar-day.module.ts","ng://angular-calendar/modules/calendar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","CalendarView","CalendarEventActionsComponent","trackByActionId","index","action","id","Input","Component","selector","template","CalendarEventTitleComponent","CalendarTooltipWindowComponent","CalendarTooltipDirective","elementRef","injector","renderer","componentFactoryResolver","viewContainerRef","document","placement","delay","cancelTooltipDelay$","Subject","tooltipFactory","resolveComponentFactory","ngOnChanges","changes","tooltipRef","contents","customTemplate","event","instance","changeDetectorRef","markForCheck","hide","ngOnDestroy","onMouseOver","_this","of","timer","pipe","takeUntil","subscribe","show","onMouseOut","createComponent","appendToBody","body","appendChild","location","nativeElement","requestAnimationFrame","positionTooltip","remove","indexOf","hostView","previousPositions","detectChanges","positionElements","children","ElementRef","Injector","Renderer2","ComponentFactoryResolver","ViewContainerRef","Inject","args","DOCUMENT","HostListener","Directive","validateEvents","events","validateEventsWithoutLog","_i","console","warn","isInsideLeftAndRight","outer","inner","Math","floor","left","ceil","right","isInside","top","bottom","isInsideTopAndBottom","roundToNearest","amount","precision","round","trackByEventId","trackByWeekDayHeaderDate","day","date","toISOString","trackByHourSegment","segment","trackByHour","hour","segments","trackByWeekAllDayEvent","weekEvent","trackByWeekTimeEvent","getPixelAmountInMinutes","hourSegments","hourSegmentHeight","hourDuration","getMinutesMoved","movedY","eventSnapSize","getDefaultEventEnd","dateAdapter","minimumMinutes","end","addMinutes","start","addDaysWithExclusions","days","excluded","daysCounter","daysToAdd","changeDays","subDays","addDays","result","abs","getDay","getWeekViewPeriod","viewDate","weekStartsOn","daysInWeek","viewStart","startOfDay","startOfWeek","endOfWeek","viewEnd","endOfDay","isWithinThreshold","_a","x","y","CalendarEventTimesChangedEventType","CalendarPreviousViewDirective","excludeDays","viewDateChange","EventEmitter","onClick","subFn","week","subWeeks","month","subMonths","view","Day","emit","Week","DateAdapter","Output","CalendarNextViewDirective","addFn","addWeeks","addMonths","CalendarTodayDirective","Date","CalendarAngularDateFormatter","monthViewColumnHeader","locale","formatDate","monthViewDayNumber","monthViewTitle","weekViewColumnHeader","weekViewColumnSubHeader","weekViewTitle","_b","format","dateToFormat","showYear","getUTCFullYear","weekViewHour","dayViewHour","dayViewTitle","Injectable","CalendarDateFormatter","__","constructor","create","__extends","_super","CalendarDatePipe","dateFormatter","transform","method","allowedMethods","getOwnPropertyNames","getPrototypeOf","filter","iMethod","Error","join","LOCALE_ID","Pipe","name","CalendarEventTitleFormatter","title","monthTooltip","weekTooltip","dayTooltip","CalendarEventTitlePipe","calendarEventTitle","titleType","ClickDirective","elm","clickListenerDisabled","click","destroy$","ngOnInit","listen","stopPropagation","Observable","observer","KeydownEnterDirective","keydown","onKeyPress","keyCode","which","preventDefault","CalendarUtils","getMonthView","getWeekViewHeader","getWeekView","CalendarA11y","i18nPlural","monthCell","badgeTotal","=0","=1","other","openDayEventsLandmark","openDayEventsAlert","eventDescription","allDay","allDayEventDescription","aria","actionButtonLabel","a11yLabel","monthCellTabIndex","hideMonthCellEvents","hideEventTitle","hideWeekHourSegment","hideDayHourSegment","I18nPluralPipe","CalendarA11yPipe","calendarA11y","a11yParams","MOMENT","InjectionToken","CalendarMomentDateFormatter","moment","CalendarNativeDateFormatter","Intl","DateTimeFormat","weekday","year","undefined","CalendarCommonModule","forRoot","config","ngModule","CalendarCommonModule_1","providers","eventTitleFormatter","utils","a11y","NgModule","declarations","imports","CommonModule","exports","entryComponents","CalendarMonthViewComponent","cdr","activeDayIsOpen","tooltipPlacement","tooltipAppendToBody","tooltipDelay","beforeViewRender","dayClicked","eventClicked","columnHeaderClicked","eventTimesChanged","trackByRowOffset","offset","slice","totalDaysVisibleInWeek","map","trackByDate","refresh","refreshSubscription","refreshAll","refreshHeader","weekendDays","refreshBody","emitBeforeViewRender","activeDay","checkActiveDayIsOpen","unsubscribe","toggleDayHighlight","isHighlighted","forEach","backgroundColor","color","secondary","eventDropped","droppedOn","draggedFrom","getYear","getMonth","getDate","newStart","setDate","setMonth","setYear","newEnd","secondsDiff","differenceInSeconds","addSeconds","type","Drop","columnHeaders","activeDay_1","openDay","find","isSameDay","openRowIndex","header","period","ChangeDetectorRef","CalendarMonthViewHeaderComponent","CalendarMonthCellComponent","highlightDay","unhighlightDay","validateDrag","host","class","[class.cal-past]","[class.cal-today]","[class.cal-future]","[class.cal-weekend]","[class.cal-in-month]","[class.cal-out-month]","[class.cal-has-events]","[class.cal-open]","[class.cal-event-highlight]","collapseAnimation","trigger","state","style","height","overflow","padding-top","padding-bottom","transition","animate","CalendarOpenDayEventsComponent","isOpen","animations","CalendarMonthModule","DragAndDropModule","CalendarDragHelper","dragContainerElement","draggableElement","startPosition","getBoundingClientRect","snapDraggedEvents","dragAlreadyMoved","isDraggedWithinThreshold","isTopInside","isBottomInside","CalendarResizeHelper","resizeContainerElement","minWidth","rtl","validateResize","rectangle","edges","width","CalendarWeekViewComponent","element","minimumEventHeight","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","dayHeaderClicked","hourSegmentClicked","allDayEventResizes","Map","timeEventResizes","eventDragEnterByType","time","dragActive","calendarId","trackByHourColumn","column","hours","trackById","row","ngAfterViewInit","window","getComputedStyle","direction","timeEventResizeStarted","eventsContainer","timeEvent","resizeEvent","set","resizeStarted","timeEventResizing","adjustedEvents","tempEvents","lastResizeEvent","newEventDates","getTimeEventResizedDates","adjustedEvent","eventIndex","restoreOriginalEvents","timeEventResizeEnded","get","delete","Resize","allDayEventResizeStarted","allDayEventsContainer","allDayEvent","originalOffset","originalSpan","span","edge","getDayColumnWidth","allDayEventResizing","dayWidth","currentResize","modifier","diff","allDayEventResizeEnded","allDayEventResizingBeforeStart","daysDiff","newDates","getAllDayEventResizedDates","eventRowContainer","offsetWidth","dateDragEnter","lastDragEnterDate","dropEvent","dropData","shouldFireDroppedEvent","getTime","lastDraggedEvent","dragEnter","dragLeave","dragStarted","eventsContainerElement","eventElement","useY","dayColumnWidth","dragHelper","isAllowed","size","validateEventTimesChanged","newEventTimes","getDragMovedEventTimes","Drag","hourColumns","linkedEvent","columnEvent","dragMove","dayEvent","dragEvent","originalEvent","allDayEventDragMove","dragEnded","dragEndEvent","isDraggedWithinPeriod","absolutePositionedEvents","dayStart","minute","dayEnd","segmentHeight","daysDragged","minutesMoved","previousView","adjustedEventsArray","has","columnIndex","hourIndex","segmentIndex","cssClass","existingColumnEvent","event_1","startsBeforeDay","endsAfterDay","tempEvent","clear","calendarEvent","eventWithoutEnd","getOwnPropertySymbols","propertyIsEnumerable","__rest","smallestResizes","resizeHelper","isWithinBoundary","beforeStart","CalendarWeekViewHeaderComponent","CalendarWeekViewEventComponent","CalendarWeekViewHourSegmentComponent","CalendarWeekViewCurrentTimeMarkerComponent","zone","columnDate$","BehaviorSubject","columnDate","marker$","onStable","switchMap","interval","startWith","switchMapTo","setMinutes","setHours","hourHeightModifier","now","isVisible","differenceInMinutes","currentValue","NgZone","CalendarWeekModule","ResizableModule","CalendarDayViewComponent","CalendarDayModule","CalendarModule","CalendarModule_1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum CalendarView {\n  Month = 'month',\n  Week = 'week',\n  Day = 'day',\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent, EventAction } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-trackByActionId=\"trackByActionId\"\n    >\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <a\n          class=\"cal-event-action\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\n          (mwlKeydownEnter)=\"\n            action.onClick({ event: event, sourceEvent: $event })\n          \"\n          [ngClass]=\"action.cssClass\"\n          [innerHtml]=\"action.label\"\n          tabindex=\"0\"\n          role=\"button\"\n          [attr.aria-label]=\"\n            { action: action } | calendarA11y: 'actionButtonLabel'\n          \"\n        >\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        trackByActionId: trackByActionId\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByActionId = (index: number, action: EventAction) =>\n    action.id ? action.id : action;\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\n      <span\n        class=\"cal-event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle: view:event\"\n        [attr.aria-hidden]=\"{} | calendarA11y: 'hideEventTitle'\"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarEventTitleComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { PlacementArray, positionElements } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\nimport { Observable, of, Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'mwl-calendar-tooltip-window',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\"\n    >\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]',\n})\nexport class CalendarTooltipDirective implements OnDestroy, OnChanges {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: PlacementArray = 'auto'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  @Input('tooltipDelay') delay: number | null = null; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n  private cancelTooltipDelay$ = new Subject();\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      this.tooltipRef &&\n      (changes.contents || changes.customTemplate || changes.event)\n    ) {\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      this.tooltipRef.changeDetectorRef.markForCheck();\n\n      if (!this.contents) {\n        this.hide();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    const delay$: Observable<any> =\n      this.delay === null ? of('now') : timer(this.delay);\n    delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\n      this.show();\n    });\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n    this.cancelTooltipDelay$.next();\n  }\n\n  private positionTooltip(previousPositions: string[] = []): void {\n    if (this.tooltipRef) {\n      this.tooltipRef.changeDetectorRef.detectChanges();\n      this.tooltipRef.instance.placement = positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\n      if (\n        previousPositions.indexOf(this.tooltipRef.instance.placement) === -1\n      ) {\n        this.positionTooltip([\n          ...previousPositions,\n          this.tooltipRef.instance.placement,\n        ]);\n      }\n    }\n  }\n}\n","import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\n\nexport abstract class DateAdapter implements BaseDateAdapter {\n  abstract addWeeks(date: Date | number, amount: number): Date;\n\n  abstract addMonths(date: Date | number, amount: number): Date;\n\n  abstract subDays(date: Date | number, amount: number): Date;\n\n  abstract subWeeks(date: Date | number, amount: number): Date;\n\n  abstract subMonths(date: Date | number, amount: number): Date;\n\n  abstract getISOWeek(date: Date | number): number;\n\n  abstract setDate(date: Date | number, dayOfMonth: number): Date;\n\n  abstract setMonth(date: Date | number, month: number): Date;\n\n  abstract setYear(date: Date | number, year: number): Date;\n\n  abstract getDate(date: Date | number): number;\n\n  abstract getMonth(date: Date | number): number;\n\n  abstract getYear(date: Date | number): number;\n\n  abstract addDays(date: Date | number, amount: number): Date;\n\n  abstract addHours(date: Date | number, amount: number): Date;\n\n  abstract addMinutes(date: Date | number, amount: number): Date;\n\n  abstract addSeconds(date: Date | number, amount: number): Date;\n\n  abstract differenceInDays(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract differenceInMinutes(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract differenceInSeconds(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract endOfDay(date: Date | number): Date;\n\n  abstract endOfMonth(date: Date | number): Date;\n\n  abstract endOfWeek(\n    date: Date | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getDay(date: Date | number): number;\n\n  abstract isSameDay(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract isSameMonth(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract isSameSecond(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract max(dates: (Date | number)[]): Date;\n\n  abstract setHours(date: Date | number, hours: number): Date;\n\n  abstract setMinutes(date: Date | number, minutes: number): Date;\n\n  abstract startOfDay(date: Date | number): Date;\n\n  abstract startOfMinute(date: Date | number): Date;\n\n  abstract startOfMonth(date: Date | number): Date;\n\n  abstract startOfWeek(\n    date: Date | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getHours(date: Date | number): number;\n\n  abstract getMinutes(date: Date | number): number;\n}\n","import {\n  CalendarEvent,\n  WeekViewTimeEvent,\n  WeekViewHour,\n  WeekViewHourSegment,\n  validateEvents as validateEventsWithoutLog,\n  ViewPeriod,\n  WeekDay,\n  WeekViewAllDayEvent,\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInsideLeftAndRight(\n  outer: ClientRect,\n  inner: ClientRect\n): boolean {\n  return (\n    Math.floor(outer.left) <= Math.ceil(inner.left) &&\n    Math.floor(inner.left) <= Math.ceil(outer.right) &&\n    Math.floor(outer.left) <= Math.ceil(inner.right) &&\n    Math.floor(inner.right) <= Math.ceil(outer.right)\n  );\n}\n\nfunction isInsideTopAndBottom(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    Math.floor(outer.top) <= Math.ceil(inner.top) &&\n    Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\n    Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\n    Math.floor(inner.bottom) <= Math.ceil(outer.bottom)\n  );\n}\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner)\n  );\n}\n\nexport function roundToNearest(amount: number, precision: number) {\n  return Math.round(amount / precision) * precision;\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByHourSegment = (\n  index: number,\n  segment: WeekViewHourSegment\n) => segment.date.toISOString();\n\nexport const trackByHour = (index: number, hour: WeekViewHour) =>\n  hour.segments[0].date.toISOString();\n\nexport const trackByWeekAllDayEvent = (\n  index: number,\n  weekEvent: WeekViewAllDayEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nexport const trackByWeekTimeEvent = (\n  index: number,\n  weekEvent: WeekViewTimeEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nconst MINUTES_IN_HOUR = 60;\n\nfunction getPixelAmountInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number,\n  hourDuration?: number\n) {\n  return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\n}\n\nexport function getMinutesMoved(\n  movedY: number,\n  hourSegments: number,\n  hourSegmentHeight: number,\n  eventSnapSize: number,\n  hourDuration?: number\n): number {\n  const draggedInPixelsSnapSize = roundToNearest(\n    movedY,\n    eventSnapSize || hourSegmentHeight\n  );\n  const pixelAmountInMinutes = getPixelAmountInMinutes(\n    hourSegments,\n    hourSegmentHeight,\n    hourDuration\n  );\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\n}\n\nexport function getMinimumEventHeightInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number,\n  hourDuration?: number\n) {\n  return (\n    getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration) *\n    hourSegmentHeight\n  );\n}\n\nexport function getDefaultEventEnd(\n  dateAdapter: DateAdapter,\n  event: CalendarEvent,\n  minimumMinutes: number\n): Date {\n  if (event.end) {\n    return event.end;\n  } else {\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\n  }\n}\n\nexport function addDaysWithExclusions(\n  dateAdapter: DateAdapter,\n  date: Date,\n  days: number,\n  excluded: number[]\n): Date {\n  let daysCounter = 0;\n  let daysToAdd = 0;\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\n  let result = date;\n  while (daysToAdd <= Math.abs(days)) {\n    result = changeDays(date, daysCounter);\n    const day = dateAdapter.getDay(result);\n    if (excluded.indexOf(day) === -1) {\n      daysToAdd++;\n    }\n    daysCounter++;\n  }\n  return result;\n}\n\nexport function isDraggedWithinPeriod(\n  newStart: Date,\n  newEnd: Date,\n  period: ViewPeriod\n): boolean {\n  const end = newEnd || newStart;\n  return (\n    (period.start <= newStart && newStart <= period.end) ||\n    (period.start <= end && end <= period.end)\n  );\n}\n\nexport function shouldFireDroppedEvent(\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n  date: Date,\n  allDay: boolean,\n  calendarId: symbol\n) {\n  return (\n    dropEvent.dropData &&\n    dropEvent.dropData.event &&\n    (dropEvent.dropData.calendarId !== calendarId ||\n      (dropEvent.dropData.event.allDay && !allDay) ||\n      (!dropEvent.dropData.event.allDay && allDay))\n  );\n}\n\nexport function getWeekViewPeriod(\n  dateAdapter: DateAdapter,\n  viewDate: Date,\n  weekStartsOn: number,\n  excluded: number[] = [],\n  daysInWeek?: number\n): { viewStart: Date; viewEnd: Date } {\n  let viewStart = daysInWeek\n    ? dateAdapter.startOfDay(viewDate)\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\n  const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\n  while (\n    excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\n    viewStart < endOfWeek\n  ) {\n    viewStart = dateAdapter.addDays(viewStart, 1);\n  }\n  if (daysInWeek) {\n    const viewEnd = dateAdapter.endOfDay(\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\n    );\n    return { viewStart, viewEnd };\n  } else {\n    let viewEnd = endOfWeek;\n    while (\n      excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\n      viewEnd > viewStart\n    ) {\n      viewEnd = dateAdapter.subDays(viewEnd, 1);\n    }\n    return { viewStart, viewEnd };\n  }\n}\n\nexport function isWithinThreshold({ x, y }: { x: number; y: number }) {\n  const DRAG_THRESHOLD = 1;\n  return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\n}\n","import { CalendarEvent } from 'calendar-utils';\n\nexport enum CalendarEventTimesChangedEventType {\n  Drag = 'drag',\n  Drop = 'drop',\n  Resize = 'resize',\n}\n\n/**\n * The output `$event` type when an event is resized or dragged and dropped.\n */\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\n  type: CalendarEventTimesChangedEventType;\n  event: CalendarEvent<MetaType>;\n  newStart: Date;\n  newEnd?: Date;\n  allDay?: boolean;\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]',\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going back by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: this.dateAdapter.subDays,\n      week: this.dateAdapter.subWeeks,\n      month: this.dateAdapter.subMonths,\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]',\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going forward by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will add this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: this.dateAdapter.addDays,\n      week: this.dateAdapter.addWeeks,\n      month: this.dateAdapter.addMonths,\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]',\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams,\n} from './calendar-date-formatter.interface';\nimport { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\n@Injectable()\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE', locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'd', locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'LLLL y', locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE', locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale,\n  }: DateFormatterParams): string {\n    return formatDate(date, 'MMM d', locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek,\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE, MMMM d, y', locale);\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\nimport { Injectable } from '@angular/core';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { formatDate } from '@angular/common';\n * import { Injectable } from '@angular/core';\n *\n * @Injectable()\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return formatDate(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\n@Injectable()\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate',\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(\n    date: Date,\n    method: string,\n    locale: string = this.locale,\n    weekStartsOn: number = 0,\n    excludeDays: number[] = [],\n    daysInWeek?: number\n  ): string {\n    if (typeof this.dateFormatter[method] === 'undefined') {\n      const allowedMethods = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(CalendarDateFormatter.prototype)\n      ).filter((iMethod) => iMethod !== 'constructor');\n      throw new Error(\n        `${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(\n          ', '\n        )}`\n      );\n    }\n    return this.dateFormatter[method]({\n      date,\n      locale,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek,\n    });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { Injectable } from '@angular/core';\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * @Injectable()\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle',\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event, title);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[mwlClick]',\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Input() clickListenerDisabled = false;\n\n  @Output('mwlClick') click = new EventEmitter<MouseEvent>(); // tslint:disable-line\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) private document\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.clickListenerDisabled) {\n      this.listen()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((event) => {\n          event.stopPropagation();\n          this.click.emit(event);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private listen() {\n    return new Observable<MouseEvent>((observer) => {\n      return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\n        observer.next(event);\n      });\n    });\n  }\n}\n","import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[mwlKeydownEnter]',\n})\nexport class KeydownEnterDirective {\n  @Output('mwlKeydownEnter') keydown = new EventEmitter<KeyboardEvent>(); // tslint:disable-line\n\n  @HostListener('keydown', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    if (event.keyCode === 13 || event.which === 13 || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.keydown.emit(event);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GetMonthViewArgs,\n  MonthView,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  GetWeekViewArgs,\n  WeekView,\n  getMonthView,\n  getWeekViewHeader,\n  getWeekView,\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Injectable()\nexport class CalendarUtils {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(this.dateAdapter, args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(this.dateAdapter, args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(this.dateAdapter, args);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { formatDate, I18nPluralPipe } from '@angular/common';\nimport { A11yParams } from './calendar-a11y.interface';\n\n/**\n * This class is responsible for adding accessibility to the calendar.\n * You may override any of its methods via angulars DI to suit your requirements.\n * For example:\n *\n * ```typescript\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\n * import { formatDate, I18nPluralPipe } from '@angular/common';\n * import { Injectable } from '@angular/core';\n *\n * // adding your own a11y params\n * export interface CustomA11yParams extends A11yParams {\n *   isDrSuess?: boolean;\n * }\n *\n * @Injectable()\n * export class CustomCalendarA11y extends CalendarA11y {\n *   constructor(protected i18nPlural: I18nPluralPipe) {\n *     super(i18nPlural);\n *   }\n *\n *   // overriding a function\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\n *     if (isDrSuess) {\n *       return `\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\n *          Today you are you! That is truer than true! There is no one alive\n *          who is you-er than you!\n *       `;\n *     }\n *   }\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *  provide: CalendarA11y,\n *  useClass: CustomCalendarA11y\n * }]\n * ```\n */\n@Injectable()\nexport class CalendarA11y {\n  constructor(protected i18nPlural: I18nPluralPipe) {}\n\n  /**\n   * Aria label for the badges/date of a cell\n   * @example: `Saturday October 19 1 event click to expand`\n   */\n  public monthCell({ day, locale }: A11yParams): string {\n    if (day.badgeTotal > 0) {\n      return `\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\n        ${this.i18nPlural.transform(day.badgeTotal, {\n          '=0': 'No events',\n          '=1': 'One event',\n          other: '# events',\n        })},\n         click to expand\n      `;\n    } else {\n      return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\n    }\n  }\n\n  /**\n   * Aria label for the open day events start landmark\n   * @example: `Saturday October 19 expanded view`\n   */\n  public openDayEventsLandmark({ date, locale }: A11yParams): string {\n    return `\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\n    `;\n  }\n\n  /**\n   * Aria label for alert that a day in the month view was expanded\n   * @example: `Saturday October 19 expanded`\n   */\n  public openDayEventsAlert({ date, locale }: A11yParams): string {\n    return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\n  }\n\n  /**\n   * Descriptive aria label for an event\n   * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\n   */\n  public eventDescription({ event, locale }: A11yParams): string {\n    if (event.allDay === true) {\n      return this.allDayEventDescription({ event, locale });\n    }\n\n    const aria = `\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\n    `;\n    if (event.end) {\n      return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\n    }\n    return aria;\n  }\n\n  /**\n   * Descriptive aria label for an all day event\n   * @example:\n   * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\n   */\n  public allDayEventDescription({ event, locale }: A11yParams): string {\n    const aria = `\n      ${event.title}, event spans multiple days:\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\n    `;\n    if (event.end) {\n      return (\n        aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`\n      );\n    }\n    return aria + `, no stop time`;\n  }\n\n  /**\n   * Aria label for the calendar event actions icons\n   * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\n   */\n  public actionButtonLabel({ action }: A11yParams): string {\n    return action.a11yLabel;\n  }\n\n  /**\n   * @returns {number} Tab index to be given to month cells\n   */\n  public monthCellTabIndex(): number {\n    return 0;\n  }\n\n  /**\n   * @returns true if the events inside the month cell should be aria-hidden\n   */\n  public hideMonthCellEvents(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if event titles should be aria-hidden (global)\n   */\n  public hideEventTitle(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if hour segments in the week view should be aria-hidden\n   */\n  public hideWeekHourSegment(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if hour segments in the day view should be aria-hidden\n   */\n  public hideDayHourSegment(): boolean {\n    return true;\n  }\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarA11y } from './calendar-a11y.provider';\nimport { A11yParams } from './calendar-a11y.interface';\n\n/**\n * This pipe is primarily for rendering aria labels. Example usage:\n * ```typescript\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\n * ```\n */\n@Pipe({\n  name: 'calendarA11y',\n})\nexport class CalendarA11yPipe implements PipeTransform {\n  constructor(\n    private calendarA11y: CalendarA11y,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(a11yParams: A11yParams, method: string): string {\n    a11yParams.locale = a11yParams.locale || this.locale;\n    if (typeof this.calendarA11y[method] === 'undefined') {\n      const allowedMethods = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(CalendarA11y.prototype)\n      ).filter((iMethod) => iMethod !== 'constructor');\n      throw new Error(\n        `${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(\n          ', '\n        )}`\n      );\n    }\n    return this.calendarA11y[method](a11yParams);\n  }\n}\n","import { InjectionToken, Inject, Injectable } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams,\n} from './calendar-date-formatter.interface';\nimport { getWeekViewPeriod } from './util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\n@Injectable()\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(MOMENT) protected moment: any,\n    protected dateAdapter: DateAdapter\n  ) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale,\n  }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('MMM D');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek,\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      this.moment(dateToFormat)\n        .locale(locale)\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('ha');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date).locale(locale).format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams,\n} from './calendar-date-formatter.interface';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\n@Injectable()\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long',\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale,\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short',\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek,\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'short',\n        year: showYear ? 'numeric' : undefined,\n      }).format(dateToFormat);\n\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long',\n    }).format(date);\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule, I18nPluralPipe } from '@angular/common';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent,\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { KeydownEnterDirective } from './keydown-enter.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\nimport { CalendarA11y } from './calendar-a11y.provider';\nimport { CalendarA11yPipe } from './calendar-a11y.pipe';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n  a11y?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-a11y.provider';\nexport * from './calendar-a11y.interface';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\nexport * from '../../date-adapters/date-adapter';\nexport * from './calendar-view.enum';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod,\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    CalendarA11yPipe,\n    ClickDirective,\n    KeydownEnterDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    CalendarA11yPipe,\n    ClickDirective,\n    KeydownEnterDirective,\n  ],\n  providers: [I18nPluralPipe],\n  entryComponents: [CalendarTooltipWindowComponent],\n})\nexport class CalendarCommonModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders<CalendarCommonModule> {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils,\n        config.a11y || CalendarA11y,\n      ],\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod,\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType,\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents } from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent<\n  EventMetaType = any,\n  DayMetaType = any\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\n  day: MonthViewDay<DayMetaType>;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\" role=\"grid\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\n        [customTemplate]=\"headerTemplate\"\n      >\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\n        >\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"\n                let day of view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek;\n                trackBy: trackByDate\n              \"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"cellTemplate\"\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\n              (mwlKeydownEnter)=\"\n                dayClicked.emit({ day: day, sourceEvent: $event })\n              \"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              \"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: $event.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n              [attr.tabindex]=\"{} | calendarA11y: 'monthCellTabIndex'\"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [locale]=\"locale\"\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [date]=\"openDay?.date\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: $event.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            \"\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * If set will be used to determine the day that should be open. If not set, the `viewDate` is used\n   */\n  @Input() activeDay: Date;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output() beforeViewRender = new EventEmitter<\n    CalendarMonthViewBeforeRenderEvent\n  >();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output() dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when a header week day is clicked. Returns ISO day number.\n   */\n  @Output() columnHeaderClicked = new EventEmitter<{\n    isoDayNumber: number;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  trackByRowOffset = (index: number, offset: number) =>\n    this.view.days\n      .slice(offset, this.view.totalDaysVisibleInWeek)\n      .map((day) => day.date.toISOString())\n      .join('-');\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    const refreshHeader =\n      changes.viewDate || changes.excludeDays || changes.weekendDays;\n    const refreshBody =\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays;\n\n    if (refreshHeader) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (refreshBody) {\n      this.refreshBody();\n    }\n\n    if (refreshHeader || refreshBody) {\n      this.emitBeforeViewRender();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.activeDay\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach((day) => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    droppedOn: MonthViewDay,\n    event: CalendarEvent,\n    draggedFrom?: MonthViewDay\n  ): void {\n    if (droppedOn !== draggedFrom) {\n      const year: number = this.dateAdapter.getYear(droppedOn.date);\n      const month: number = this.dateAdapter.getMonth(droppedOn.date);\n      const date: number = this.dateAdapter.getDate(droppedOn.date);\n      const newStart: Date = this.dateAdapter.setDate(\n        this.dateAdapter.setMonth(\n          this.dateAdapter.setYear(event.start, year),\n          month\n        ),\n        date\n      );\n      let newEnd: Date;\n      if (event.end) {\n        const secondsDiff: number = this.dateAdapter.differenceInSeconds(\n          newStart,\n          event.start\n        );\n        newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\n      }\n      this.eventTimesChanged.emit({\n        event,\n        newStart,\n        newEnd,\n        day: droppedOn,\n        type: CalendarEventTimesChangedEventType.Drop,\n      });\n    }\n  }\n\n  protected refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n    });\n  }\n\n  protected refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n    });\n  }\n\n  protected checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      const activeDay = this.activeDay || this.viewDate;\n      this.openDay = this.view.days.find((day) =>\n        this.dateAdapter.isSameDay(day.date, activeDay)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  protected refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.emitBeforeViewRender();\n    this.checkActiveDayIsOpen();\n  }\n\n  protected emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period,\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  TemplateRef,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n    >\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          (click)=\"\n            columnHeaderClicked.emit({\n              isoDayNumber: day.day,\n              sourceEvent: $event\n            })\n          \"\n          [ngClass]=\"day.cssClass\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          {{ day.date | calendarDate: 'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output() columnHeaderClicked = new EventEmitter<{\n    isoDayNumber: number;\n    sourceEvent: MouseEvent;\n  }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { isWithinThreshold, trackByEventId } from '../common/util';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-cell-top\"\n        [attr.aria-label]=\"\n          { day: day, locale: locale } | calendarA11y: 'monthCell'\n        \"\n      >\n        <span aria-hidden=\"true\">\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\n            day.badgeTotal\n          }}</span>\n          <span class=\"cal-day-number\">{{\n            day.date | calendarDate: 'monthViewDayNumber':locale\n          }}</span>\n        </span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\n          [mwlCalendarTooltip]=\"\n            event.title | calendarEventTitle: 'monthTooltip':event\n          \"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, draggedFrom: day }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\n          [attr.aria-hidden]=\"{} | calendarA11y: 'hideMonthCellEvents'\"\n        ></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[class.cal-event-highlight]': '!!day.backgroundColor',\n  },\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Input() tooltipDelay: number | null;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n\n  validateDrag = isWithinThreshold;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  state,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { isWithinThreshold, trackByEventId } from '../common/util';\n\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\n  state(\n    'void',\n    style({\n      height: 0,\n      overflow: 'hidden',\n      'padding-top': 0,\n      'padding-bottom': 0,\n    })\n  ),\n  state(\n    '*',\n    style({\n      height: '*',\n      overflow: 'hidden',\n      'padding-top': '*',\n      'padding-bottom': '*',\n    })\n  ),\n  transition('* => void', animate('150ms ease-out')),\n  transition('void => *', animate('150ms ease-in')),\n]);\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-open-day-events\"\n        [@collapse]\n        *ngIf=\"isOpen\"\n        role=\"application\"\n      >\n        <span\n          tabindex=\"-1\"\n          role=\"alert\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale } | calendarA11y: 'openDayEventsAlert'\n          \"\n        ></span>\n        <span\n          tabindex=\"0\"\n          role=\"landmark\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale }\n              | calendarA11y: 'openDayEventsLandmark'\n          \"\n        ></span>\n        <div\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n        >\n          <span\n            class=\"cal-event\"\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            (mwlKeydownEnter)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            tabindex=\"0\"\n            [attr.aria-label]=\"\n              { event: event, locale: locale }\n                | calendarA11y: 'eventDescription'\n            \"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  `,\n  animations: [collapseAnimation],\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input() locale: string;\n\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() date: Date;\n\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n\n  validateDrag = isWithinThreshold;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent,\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\nexport { collapseAnimation } from './calendar-open-day-events.component';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent,\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent,\n  ],\n})\nexport class CalendarMonthModule {}\n","import { isInsideLeftAndRight, isWithinThreshold } from './util';\nimport { ValidateDragParams } from 'angular-draggable-droppable';\n\nexport class CalendarDragHelper {\n  private readonly startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({\n    x,\n    y,\n    snapDraggedEvents,\n    dragAlreadyMoved,\n    transform,\n  }: {\n    x: number;\n    y: number;\n    snapDraggedEvents: boolean;\n    dragAlreadyMoved: boolean;\n    transform: ValidateDragParams['transform'];\n  }): boolean {\n    const isDraggedWithinThreshold =\n      isWithinThreshold({ x, y }) || dragAlreadyMoved;\n\n    if (snapDraggedEvents) {\n      const inner: ClientRect = Object.assign({}, this.startPosition, {\n        left: this.startPosition.left + transform.x,\n        right: this.startPosition.right + transform.x,\n        top: this.startPosition.top + transform.y,\n        bottom: this.startPosition.bottom + transform.y,\n      });\n\n      if (isDraggedWithinThreshold) {\n        const outer = this.dragContainerElement.getBoundingClientRect();\n\n        const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\n\n        const isBottomInside =\n          outer.top < inner.bottom && inner.bottom < outer.bottom;\n\n        return (\n          isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside)\n        );\n      }\n\n      /* istanbul ignore next */\n      return false;\n    } else {\n      return isDraggedWithinThreshold;\n    }\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth: number,\n    private rtl: boolean\n  ) {}\n\n  validateResize({ rectangle, edges }): boolean {\n    if (this.rtl) {\n      // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\n      /* istanbul ignore next */\n      if (typeof edges.left !== 'undefined') {\n        rectangle.left -= edges.left;\n        rectangle.right += edges.left;\n      } else if (typeof edges.right !== 'undefined') {\n        rectangle.left += edges.right;\n        rectangle.right -= edges.right;\n      }\n      rectangle.width = rectangle.right - rectangle.left;\n    }\n\n    if (\n      this.minWidth &&\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\n    ) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewAllDayEvent,\n  WeekView,\n  ViewPeriod,\n  WeekViewHourColumn,\n  WeekViewTimeEvent,\n  WeekViewHourSegment,\n  WeekViewHour,\n  WeekViewAllDayEventRow,\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType,\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  roundToNearest,\n  trackByWeekDayHeaderDate,\n  trackByHourSegment,\n  trackByHour,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  addDaysWithExclusions,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent,\n  getWeekViewPeriod,\n  trackByWeekAllDayEvent,\n  trackByWeekTimeEvent,\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport {\n  DragEndEvent,\n  DropEvent,\n  DragMoveEvent,\n  ValidateDrag,\n} from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface WeekViewAllDayEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\n  header: WeekDay[];\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" role=\"grid\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        \"\n        (dragEnter)=\"dateDragEnter($event.date)\"\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('allDay')\"\n        (dragLeave)=\"dragLeave('allDay')\"\n      >\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n          ></div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\"\n            (dragEnter)=\"dateDragEnter(day.date)\"\n          ></div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n          #eventRowContainer\n          class=\"cal-events-row\"\n        >\n          <div\n            *ngFor=\"\n              let allDayEvent of eventRow.row;\n              trackBy: trackByWeekAllDayEvent\n            \"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            \"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"\n              rtl ? null : (100 / days.length) * allDayEvent.offset\n            \"\n            [style.marginRight.%]=\"\n              rtl\n                ? (100 / days.length) * (days.length - allDayEvent.offset) * -1\n                : null\n            \"\n            mwlResizable\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            \"\n            (resizing)=\"\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            \"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n            [validateDrag]=\"validateDrag\"\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n            (dragStart)=\"\n              dragStarted(eventRowContainer, event, allDayEvent, false)\n            \"\n            (dragging)=\"allDayEventDragMove()\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\"\n            ></div>\n            <mwl-calendar-week-view-event\n              [locale]=\"locale\"\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              [daysInWeek]=\"daysInWeek\"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: allDayEvent.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('time')\"\n        (dragLeave)=\"dragLeave('time')\"\n      >\n        <div\n          class=\"cal-time-label-column\"\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\n        >\n          <div\n            *ngFor=\"\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            \"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\"\n              [daysInWeek]=\"daysInWeek\"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns\n        >\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n          >\n            <mwl-calendar-week-view-current-time-marker\n              [columnDate]=\"column.date\"\n              [dayStartHour]=\"dayStartHour\"\n              [dayStartMinute]=\"dayStartMinute\"\n              [dayEndHour]=\"dayEndHour\"\n              [dayEndMinute]=\"dayEndMinute\"\n              [hourSegments]=\"hourSegments\"\n              [hourDuration]=\"hourDuration\"\n              [hourSegmentHeight]=\"hourSegmentHeight\"\n              [customTemplate]=\"currentTimeMarkerTemplate\"\n            ></mwl-calendar-week-view-current-time-marker>\n            <div class=\"cal-events-container\">\n              <div\n                *ngFor=\"\n                  let timeEvent of column.events;\n                  trackBy: trackByWeekTimeEvent\n                \"\n                #event\n                class=\"cal-event-container\"\n                [class.cal-draggable]=\"\n                  timeEvent.event.draggable && timeEventResizes.size === 0\n                \"\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n                [ngClass]=\"timeEvent.event.cssClass\"\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n                [style.top.px]=\"timeEvent.top\"\n                [style.height.px]=\"timeEvent.height\"\n                [style.left.%]=\"timeEvent.left\"\n                [style.width.%]=\"timeEvent.width\"\n                mwlResizable\n                [resizeSnapGrid]=\"{\n                  left: dayColumnWidth,\n                  right: dayColumnWidth,\n                  top: eventSnapSize || hourSegmentHeight,\n                  bottom: eventSnapSize || hourSegmentHeight\n                }\"\n                [validateResize]=\"validateResize\"\n                [allowNegativeResizes]=\"true\"\n                (resizeStart)=\"\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\n                \"\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n                mwlDraggable\n                dragActiveClass=\"cal-drag-active\"\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n                [dragAxis]=\"{\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\n                }\"\n                [dragSnapGrid]=\"\n                  snapDraggedEvents\n                    ? {\n                        x: dayColumnWidth,\n                        y: eventSnapSize || hourSegmentHeight\n                      }\n                    : {}\n                \"\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\n                [ghostElementTemplate]=\"weekEventTemplate\"\n                [validateDrag]=\"validateDrag\"\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\n                (dragging)=\"dragMove(timeEvent, $event)\"\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n              >\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.beforeStart &&\n                    !timeEvent.startsBeforeDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    left: true,\n                    top: true\n                  }\"\n                ></div>\n                <ng-template\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\n                ></ng-template>\n                <ng-template #weekEventTemplate>\n                  <mwl-calendar-week-view-event\n                    [locale]=\"locale\"\n                    [weekEvent]=\"timeEvent\"\n                    [tooltipPlacement]=\"tooltipPlacement\"\n                    [tooltipTemplate]=\"tooltipTemplate\"\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                    [tooltipDelay]=\"tooltipDelay\"\n                    [customTemplate]=\"eventTemplate\"\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\n                    [column]=\"column\"\n                    [daysInWeek]=\"daysInWeek\"\n                    (eventClicked)=\"\n                      eventClicked.emit({\n                        event: timeEvent.event,\n                        sourceEvent: $event.sourceEvent\n                      })\n                    \"\n                  >\n                  </mwl-calendar-week-view-event>\n                </ng-template>\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.afterEnd &&\n                    !timeEvent.endsAfterDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    right: true,\n                    bottom: true\n                  }\"\n                ></div>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              \"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                \"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                [daysInWeek]=\"daysInWeek\"\n                (mwlClick)=\"\n                  hourSegmentClicked.emit({\n                    date: segment.date,\n                    sourceEvent: $event\n                  })\n                \"\n                [clickListenerDisabled]=\"\n                  hourSegmentClicked.observers.length === 0\n                \"\n                mwlDroppable\n                [dragOverClass]=\"\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n                \"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\"\n                (dragEnter)=\"dateDragEnter(segment.date)\"\n                [isTimeLabel]=\"daysInWeek === 1\"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class CalendarWeekViewComponent\n  implements OnChanges, OnInit, OnDestroy, AfterViewInit {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * The start number of the week.\n   * This is ignored when the `daysInWeek` input is also set as the `viewDate` will be used as the start of the week instead.\n   * Note, you should also pass this to the calendar title pipe so it shows the same days: {{ viewDate | calendarDate:(view + 'ViewTitle'):locale:weekStartsOn }}\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The duration of each segment group in minutes\n   */\n  @Input() hourDuration: number;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The minimum height in pixels of each event\n   */\n  @Input() minimumEventHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * The grid size to snap resizing and dragging of hourly events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * The number of days in a week. Can be used to create a shorter or longer week view.\n   * The first day of the week will always be the `viewDate` and `weekStartsOn` if set will be ignored\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * A custom template to use for the current time marker\n   */\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\n\n  /**\n   * Allow you to customise where events can be dragged and resized to.\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\n   */\n  @Input() validateEventTimesChanged: (\n    event: CalendarEventTimesChangedEvent\n  ) => boolean;\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output() dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n    sourceEvent: MouseEvent;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output() eventTimesChanged = new EventEmitter<\n    CalendarEventTimesChangedEvent\n  >();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output() beforeViewRender = new EventEmitter<\n    CalendarWeekViewBeforeRenderEvent\n  >();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output() hourSegmentClicked = new EventEmitter<{\n    date: Date;\n    sourceEvent: MouseEvent;\n  }>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  allDayEventResizes: Map<\n    WeekViewAllDayEvent,\n    WeekViewAllDayEventResize\n  > = new Map();\n\n  /**\n   * @hidden\n   */\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnterByType = {\n    allDay: 0,\n    time: 0,\n  };\n\n  /**\n   * @hidden\n   */\n  dragActive = false;\n\n  /**\n   * @hidden\n   */\n  dragAlreadyMoved = false;\n\n  /**\n   * @hidden\n   */\n  validateDrag: ValidateDrag;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar week view id');\n\n  /**\n   * @hidden\n   */\n  lastDraggedEvent: CalendarEvent;\n\n  /**\n   * @hidden\n   */\n  rtl = false;\n\n  /**\n   * @hidden\n   */\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByWeekAllDayEvent = trackByWeekAllDayEvent;\n\n  /**\n   * @hidden\n   */\n  trackByWeekTimeEvent = trackByWeekTimeEvent;\n\n  /**\n   * @hidden\n   */\n  private lastDragEnterDate: Date;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter,\n    protected element: ElementRef<HTMLElement>\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\n\n  /**\n   * @hidden\n   */\n  trackById = (index: number, row: WeekViewAllDayEventRow) => row.id;\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    const refreshHeader =\n      changes.viewDate ||\n      changes.excludeDays ||\n      changes.weekendDays ||\n      changes.daysInWeek ||\n      changes.weekStartsOn;\n\n    const refreshBody =\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments ||\n      changes.hourDuration ||\n      changes.weekStartsOn ||\n      changes.weekendDays ||\n      changes.excludeDays ||\n      changes.hourSegmentHeight ||\n      changes.events ||\n      changes.daysInWeek ||\n      changes.minimumEventHeight;\n\n    if (refreshHeader) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (refreshBody) {\n      this.refreshBody();\n    }\n\n    if (refreshHeader || refreshBody) {\n      this.emitBeforeViewRender();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngAfterViewInit() {\n    this.rtl =\n      typeof window !== 'undefined' &&\n      getComputedStyle(this.element.nativeElement).direction === 'rtl';\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeStarted(\n    eventsContainer: HTMLElement,\n    timeEvent: WeekViewTimeEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    this.resizeStarted(eventsContainer, timeEvent);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizing(timeEvent: WeekViewTimeEvent, resizeEvent: ResizeEvent) {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\n\n    const tempEvents = [...this.events];\n\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\n      const newEventDates = this.getTimeEventResizedDates(\n        event,\n        lastResizeEvent\n      );\n      const adjustedEvent = { ...event, ...newEventDates };\n      adjustedEvents.set(adjustedEvent, event);\n      const eventIndex = tempEvents.indexOf(event);\n      tempEvents[eventIndex] = adjustedEvent;\n    });\n\n    this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeEnded(timeEvent: WeekViewTimeEvent) {\n    this.view = this.getWeekView(this.events);\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\n    if (lastResizeEvent) {\n      this.timeEventResizes.delete(timeEvent.event);\n      const newEventDates = this.getTimeEventResizedDates(\n        timeEvent.event,\n        lastResizeEvent\n      );\n      this.eventTimesChanged.emit({\n        newStart: newEventDates.start,\n        newEnd: newEventDates.end,\n        event: timeEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize,\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeStarted(\n    allDayEventsContainer: HTMLElement,\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.allDayEventResizes.set(allDayEvent, {\n      originalOffset: allDayEvent.offset,\n      originalSpan: allDayEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\n    });\n    this.resizeStarted(\n      allDayEventsContainer,\n      allDayEvent,\n      this.getDayColumnWidth(allDayEventsContainer)\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizing(\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    const modifier = this.rtl ? -1 : 1;\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const diff: number =\n        Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\n      allDayEvent.offset = currentResize.originalOffset + diff;\n      allDayEvent.span = currentResize.originalSpan - diff;\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const diff: number =\n        Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\n      allDayEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (currentResize) {\n      const allDayEventResizingBeforeStart = currentResize.edge === 'left';\n      let daysDiff: number;\n      if (allDayEventResizingBeforeStart) {\n        daysDiff = allDayEvent.offset - currentResize.originalOffset;\n      } else {\n        daysDiff = allDayEvent.span - currentResize.originalSpan;\n      }\n\n      allDayEvent.offset = currentResize.originalOffset;\n      allDayEvent.span = currentResize.originalSpan;\n\n      const newDates = this.getAllDayEventResizedDates(\n        allDayEvent.event,\n        daysDiff,\n        allDayEventResizingBeforeStart\n      );\n\n      this.eventTimesChanged.emit({\n        newStart: newDates.start,\n        newEnd: newDates.end,\n        event: allDayEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize,\n      });\n      this.allDayEventResizes.delete(allDayEvent);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dateDragEnter(date: Date) {\n    this.lastDragEnterDate = date;\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    dropEvent: DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (\n      shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\n      this.lastDragEnterDate.getTime() === date.getTime() &&\n      (!this.snapDraggedEvents ||\n        dropEvent.dropData.event !== this.lastDraggedEvent)\n    ) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay,\n      });\n    }\n    this.lastDraggedEvent = null;\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnter(type: 'allDay' | 'time') {\n    this.eventDragEnterByType[type]++;\n  }\n\n  /**\n   * @hidden\n   */\n  dragLeave(type: 'allDay' | 'time') {\n    this.eventDragEnterByType[type]--;\n  }\n\n  /**\n   * @hidden\n   */\n  dragStarted(\n    eventsContainerElement: HTMLElement,\n    eventElement: HTMLElement,\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\n    useY: boolean\n  ): void {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      eventsContainerElement,\n      eventElement\n    );\n    this.validateDrag = ({ x, y, transform }) => {\n      const isAllowed =\n        this.allDayEventResizes.size === 0 &&\n        this.timeEventResizes.size === 0 &&\n        dragHelper.validateDrag({\n          x,\n          y,\n          snapDraggedEvents: this.snapDraggedEvents,\n          dragAlreadyMoved: this.dragAlreadyMoved,\n          transform,\n        });\n      if (isAllowed && this.validateEventTimesChanged) {\n        const newEventTimes = this.getDragMovedEventTimes(\n          event,\n          { x, y },\n          this.dayColumnWidth,\n          useY\n        );\n        return this.validateEventTimesChanged({\n          type: CalendarEventTimesChangedEventType.Drag,\n          event: event.event,\n          newStart: newEventTimes.start,\n          newEnd: newEventTimes.end,\n        });\n      }\n\n      return isAllowed;\n    };\n    this.dragActive = true;\n    this.dragAlreadyMoved = false;\n    this.lastDraggedEvent = null;\n    this.eventDragEnterByType = {\n      allDay: 0,\n      time: 0,\n    };\n    if (!this.snapDraggedEvents && useY) {\n      this.view.hourColumns.forEach((column) => {\n        const linkedEvent = column.events.find(\n          (columnEvent) =>\n            columnEvent.event === event.event && columnEvent !== event\n        );\n        // hide any linked events while dragging\n        if (linkedEvent) {\n          linkedEvent.width = 0;\n          linkedEvent.height = 0;\n        }\n      });\n    }\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\n    const newEventTimes = this.getDragMovedEventTimes(\n      dayEvent,\n      dragEvent,\n      this.dayColumnWidth,\n      true\n    );\n    const originalEvent = dayEvent.event;\n    const adjustedEvent = { ...originalEvent, ...newEventTimes };\n    const tempEvents = this.events.map((event) => {\n      if (event === originalEvent) {\n        return adjustedEvent;\n      }\n      return event;\n    });\n    this.restoreOriginalEvents(\n      tempEvents,\n      new Map([[adjustedEvent, originalEvent]]),\n      this.snapDraggedEvents\n    );\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventDragMove() {\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ): void {\n    this.view = this.getWeekView(this.events);\n    this.dragActive = false;\n    this.validateDrag = null;\n    const { start, end } = this.getDragMovedEventTimes(\n      weekEvent,\n      dragEndEvent,\n      dayWidth,\n      useY\n    );\n    if (\n      (this.snapDraggedEvents ||\n        this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\n      isDraggedWithinPeriod(start, end, this.view.period)\n    ) {\n      this.lastDraggedEvent = weekEvent.event;\n      this.eventTimesChanged.emit({\n        newStart: start,\n        newEnd: end,\n        event: weekEvent.event,\n        type: CalendarEventTimesChangedEventType.Drag,\n        allDay: !useY,\n      });\n    }\n  }\n\n  protected refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      ),\n    });\n  }\n\n  protected refreshBody(): void {\n    this.view = this.getWeekView(this.events);\n  }\n\n  protected refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.emitBeforeViewRender();\n  }\n\n  protected emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        ...this.view,\n      });\n    }\n  }\n\n  protected getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      hourDuration: this.hourDuration,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      minimumEventHeight: this.minimumEventHeight,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      ),\n    });\n  }\n\n  protected getDragMovedEventTimes(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent | DragMoveEvent,\n    dayWidth: number,\n    useY: boolean\n  ) {\n    const daysDragged =\n      (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\n      (this.rtl ? -1 : 1);\n    const minutesMoved = useY\n      ? getMinutesMoved(\n          dragEndEvent.y,\n          this.hourSegments,\n          this.hourSegmentHeight,\n          this.eventSnapSize,\n          this.hourDuration\n        )\n      : 0;\n\n    const start = this.dateAdapter.addMinutes(\n      addDaysWithExclusions(\n        this.dateAdapter,\n        weekEvent.event.start,\n        daysDragged,\n        this.excludeDays\n      ),\n      minutesMoved\n    );\n    let end: Date;\n    if (weekEvent.event.end) {\n      end = this.dateAdapter.addMinutes(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          weekEvent.event.end,\n          daysDragged,\n          this.excludeDays\n        ),\n        minutesMoved\n      );\n    }\n\n    return { start, end };\n  }\n\n  protected restoreOriginalEvents(\n    tempEvents: CalendarEvent[],\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>,\n    snapDraggedEvents = true\n  ) {\n    const previousView = this.view;\n    this.view = this.getWeekView(tempEvents);\n    const adjustedEventsArray = tempEvents.filter((event) =>\n      adjustedEvents.has(event)\n    );\n    this.view.hourColumns.forEach((column, columnIndex) => {\n      previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\n        hour.segments.forEach((segment, segmentIndex) => {\n          column.hours[hourIndex].segments[segmentIndex].cssClass =\n            segment.cssClass;\n        });\n      });\n\n      adjustedEventsArray.forEach((adjustedEvent) => {\n        const originalEvent = adjustedEvents.get(adjustedEvent);\n        const existingColumnEvent = column.events.find(\n          (columnEvent) => columnEvent.event === adjustedEvent\n        );\n        if (existingColumnEvent) {\n          // restore the original event so trackBy kicks in and the dom isn't changed\n          existingColumnEvent.event = originalEvent;\n          existingColumnEvent['tempEvent'] = adjustedEvent;\n          if (!snapDraggedEvents) {\n            existingColumnEvent.height = 0;\n            existingColumnEvent.width = 0;\n          }\n        } else {\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\n          const event = {\n            event: originalEvent,\n            left: 0,\n            top: 0,\n            height: 0,\n            width: 0,\n            startsBeforeDay: false,\n            endsAfterDay: false,\n            tempEvent: adjustedEvent,\n          };\n          column.events.push(event);\n        }\n      });\n    });\n    adjustedEvents.clear();\n  }\n\n  protected getTimeEventResizedDates(\n    calendarEvent: CalendarEvent,\n    resizeEvent: ResizeEvent\n  ) {\n    const minimumEventHeight = getMinimumEventHeightInMinutes(\n      this.hourSegments,\n      this.hourSegmentHeight,\n      this.hourDuration\n    );\n    const newEventDates = {\n      start: calendarEvent.start,\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        calendarEvent,\n        minimumEventHeight\n      ),\n    };\n    const { end, ...eventWithoutEnd } = calendarEvent;\n    const smallestResizes = {\n      start: this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minimumEventHeight * -1\n      ),\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        eventWithoutEnd,\n        minimumEventHeight\n      ),\n    };\n\n    const modifier = this.rtl ? -1 : 1;\n\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const daysDiff =\n        Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\n      const newStart = addDaysWithExclusions(\n        this.dateAdapter,\n        newEventDates.start,\n        daysDiff,\n        this.excludeDays\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const daysDiff =\n        Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\n      const newEnd = addDaysWithExclusions(\n        this.dateAdapter,\n        newEventDates.end,\n        daysDiff,\n        this.excludeDays\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    if (typeof resizeEvent.edges.top !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.top as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize,\n        this.hourDuration\n      );\n      const newStart = this.dateAdapter.addMinutes(\n        newEventDates.start,\n        minutesMoved\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.bottom as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize,\n        this.hourDuration\n      );\n      const newEnd = this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minutesMoved\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    return newEventDates;\n  }\n\n  protected resizeStarted(\n    eventsContainer: HTMLElement,\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\n    dayWidth?: number\n  ) {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const resizeHelper = new CalendarResizeHelper(\n      eventsContainer,\n      dayWidth,\n      this.rtl\n    );\n    this.validateResize = ({ rectangle, edges }) => {\n      const isWithinBoundary = resizeHelper.validateResize({\n        rectangle: { ...rectangle },\n        edges,\n      });\n\n      if (isWithinBoundary && this.validateEventTimesChanged) {\n        let newEventDates;\n        if (!dayWidth) {\n          newEventDates = this.getTimeEventResizedDates(event.event, {\n            rectangle,\n            edges,\n          });\n        } else {\n          const modifier = this.rtl ? -1 : 1;\n          if (typeof edges.left !== 'undefined') {\n            const diff = Math.round(+edges.left / dayWidth) * modifier;\n            newEventDates = this.getAllDayEventResizedDates(\n              event.event,\n              diff,\n              !this.rtl\n            );\n          } else {\n            const diff = Math.round(+edges.right / dayWidth) * modifier;\n            newEventDates = this.getAllDayEventResizedDates(\n              event.event,\n              diff,\n              this.rtl\n            );\n          }\n        }\n        return this.validateEventTimesChanged({\n          type: CalendarEventTimesChangedEventType.Resize,\n          event: event.event,\n          newStart: newEventDates.start,\n          newEnd: newEventDates.end,\n        });\n      }\n\n      return isWithinBoundary;\n    };\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  protected getAllDayEventResizedDates(\n    event: CalendarEvent,\n    daysDiff: number,\n    beforeStart: boolean\n  ) {\n    let start: Date = event.start;\n    let end: Date = event.end || event.start;\n    if (beforeStart) {\n      start = addDaysWithExclusions(\n        this.dateAdapter,\n        start,\n        daysDiff,\n        this.excludeDays\n      );\n    } else {\n      end = addDaysWithExclusions(\n        this.dateAdapter,\n        end,\n        daysDiff,\n        this.excludeDays\n      );\n    }\n\n    return { start, end };\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n      let-dragEnter=\"dragEnter\"\n    >\n      <div class=\"cal-day-headers\" role=\"row\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          \"\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          <b>{{ day.date | calendarDate: 'weekViewColumnHeader':locale }}</b\n          ><br />\n          <span>{{\n            day.date | calendarDate: 'weekViewColumnSubHeader':locale\n          }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped,\n        dragEnter: dragEnter,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output() dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n    sourceEvent: MouseEvent;\n  }>();\n\n  @Output() eventDropped = new EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }>();\n\n  @Output() dragEnter = new EventEmitter<{ date: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  WeekViewAllDayEvent,\n  WeekViewTimeEvent,\n  WeekViewHourColumn,\n} from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-column=\"column\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        class=\"cal-event\"\n        [ngStyle]=\"{\n          backgroundColor: weekEvent.event.color?.secondary,\n          borderColor: weekEvent.event.color?.primary\n        }\"\n        [mwlCalendarTooltip]=\"\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\n                : weekEvent.tempEvent || weekEvent.event)\n            : ''\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        [tooltipDelay]=\"tooltipDelay\"\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\n        tabindex=\"0\"\n        role=\"application\"\n        [attr.aria-label]=\"\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\n            | calendarA11y: 'eventDescription'\n        \"\n      >\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled,\n        tooltipDelay: tooltipDelay,\n        column: column,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarWeekViewEventComponent {\n  @Input() locale: string;\n\n  @Input() weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() tooltipDisabled: boolean;\n\n  @Input() tooltipDelay: number | null;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Input() column: WeekViewHourColumn;\n\n  @Input() daysInWeek: number;\n\n  @Output() eventClicked = new EventEmitter<{\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        [attr.aria-hidden]=\"\n          {}\n            | calendarA11y\n              : (daysInWeek === 1\n                  ? 'hideDayHourSegment'\n                  : 'hideWeekHourSegment')\n        \"\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{\n            segment.displayDate\n              | calendarDate\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\n                : locale\n          }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarWeekViewHourSegmentComponent {\n  @Input() segment: WeekViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() isTimeLabel: boolean;\n\n  @Input() daysInWeek: number;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\nimport { switchMapTo, startWith, map, switchMap } from 'rxjs/operators';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Component({\n  selector: 'mwl-calendar-week-view-current-time-marker',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-columnDate=\"columnDate\"\n      let-dayStartHour=\"dayStartHour\"\n      let-dayStartMinute=\"dayStartMinute\"\n      let-dayEndHour=\"dayEndHour\"\n      let-dayEndMinute=\"dayEndMinute\"\n      let-isVisible=\"isVisible\"\n      let-topPx=\"topPx\"\n    >\n      <div\n        class=\"cal-current-time-marker\"\n        *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\"\n      ></div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        columnDate: columnDate,\n        dayStartHour: dayStartHour,\n        dayStartMinute: dayStartMinute,\n        dayEndHour: dayEndHour,\n        dayEndMinute: dayEndMinute,\n        isVisible: (marker$ | async)?.isVisible,\n        topPx: (marker$ | async)?.top\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class CalendarWeekViewCurrentTimeMarkerComponent implements OnChanges {\n  @Input() columnDate: Date;\n\n  @Input() dayStartHour: number;\n\n  @Input() dayStartMinute: number;\n\n  @Input() dayEndHour: number;\n\n  @Input() dayEndMinute: number;\n\n  @Input() hourSegments: number;\n\n  @Input() hourDuration: number;\n\n  @Input() hourSegmentHeight: number;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  columnDate$ = new BehaviorSubject<Date>(this.columnDate);\n\n  marker$: Observable<{\n    isVisible: boolean;\n    top: number;\n  }> = this.zone.onStable.pipe(\n    switchMap(() => interval(60 * 1000)),\n    startWith(0),\n    switchMapTo(this.columnDate$),\n    map((columnDate) => {\n      const startOfDay = this.dateAdapter.setMinutes(\n        this.dateAdapter.setHours(columnDate, this.dayStartHour),\n        this.dayStartMinute\n      );\n      const endOfDay = this.dateAdapter.setMinutes(\n        this.dateAdapter.setHours(columnDate, this.dayEndHour),\n        this.dayEndMinute\n      );\n      const hourHeightModifier =\n        (this.hourSegments * this.hourSegmentHeight) /\n        (this.hourDuration || 60);\n      const now = new Date();\n      return {\n        isVisible:\n          this.dateAdapter.isSameDay(columnDate, now) &&\n          now >= startOfDay &&\n          now <= endOfDay,\n        top:\n          this.dateAdapter.differenceInMinutes(now, startOfDay) *\n          hourHeightModifier,\n      };\n    })\n  );\n\n  constructor(private dateAdapter: DateAdapter, private zone: NgZone) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.columnDate) {\n      this.columnDate$.next(changes.columnDate.currentValue);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view-hour-segment.component';\nimport { CalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view-current-time-marker.component';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent,\n} from './calendar-week-view.component';\nexport {\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs,\n} from 'calendar-utils';\nexport { getWeekViewPeriod } from '../common/util';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule,\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent,\n    CalendarWeekViewCurrentTimeMarkerComponent,\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent,\n    CalendarWeekViewCurrentTimeMarkerComponent,\n  ],\n})\nexport class CalendarWeekModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n} from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { Subject } from 'rxjs';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { PlacementArray } from 'positioning';\nimport { CalendarWeekViewBeforeRenderEvent } from '../week/calendar-week.module';\n\nexport type CalendarDayViewBeforeRenderEvent = CalendarWeekViewBeforeRenderEvent;\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <mwl-calendar-week-view\n      class=\"cal-day-view\"\n      [daysInWeek]=\"1\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [hourSegments]=\"hourSegments\"\n      [hourDuration]=\"hourDuration\"\n      [hourSegmentHeight]=\"hourSegmentHeight\"\n      [minimumEventHeight]=\"minimumEventHeight\"\n      [dayStartHour]=\"dayStartHour\"\n      [dayStartMinute]=\"dayStartMinute\"\n      [dayEndHour]=\"dayEndHour\"\n      [dayEndMinute]=\"dayEndMinute\"\n      [refresh]=\"refresh\"\n      [locale]=\"locale\"\n      [eventSnapSize]=\"eventSnapSize\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\n      [tooltipDelay]=\"tooltipDelay\"\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\n      [eventTemplate]=\"eventTemplate\"\n      [eventTitleTemplate]=\"eventTitleTemplate\"\n      [eventActionsTemplate]=\"eventActionsTemplate\"\n      [snapDraggedEvents]=\"snapDraggedEvents\"\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\n      (eventClicked)=\"eventClicked.emit($event)\"\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\n    ></mwl-calendar-week-view>\n  `,\n})\nexport class CalendarDayViewComponent {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The duration of each segment group in minutes\n   */\n  @Input() hourDuration: number;\n\n  /**\n   * The minimum height in pixels of each event\n   */\n  @Input() minimumEventHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the current time marker\n   */\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\n\n  /**\n   * Allow you to customise where events can be dragged and resized to.\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\n   */\n  @Input() validateEventTimesChanged: (\n    event: CalendarEventTimesChangedEvent\n  ) => boolean;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output() hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output() eventTimesChanged = new EventEmitter<\n    CalendarEventTimesChangedEvent\n  >();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output() beforeViewRender = new EventEmitter<\n    CalendarDayViewBeforeRenderEvent\n  >();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekModule } from '../week/calendar-week.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent,\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\n  declarations: [CalendarDayViewComponent],\n  exports: [CalendarDayViewComponent],\n})\nexport class CalendarDayModule {}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter,\n  CalendarA11y,\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\nimport { CalendarUtils } from './common/calendar-utils.provider';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule,\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule,\n  ],\n})\nexport class CalendarModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders<CalendarModule> {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils,\n        config.a11y || CalendarA11y,\n      ],\n    };\n  }\n}\n"]}