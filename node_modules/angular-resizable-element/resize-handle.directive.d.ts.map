{"version":3,"file":"resize-handle.directive.d.ts","sources":["resize-handle.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Renderer2, ElementRef, OnDestroy, NgZone } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n */\nexport declare class ResizeHandleDirective implements OnDestroy {\n    private renderer;\n    private element;\n    private zone;\n    private resizable;\n    /**\n     * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n     */\n    resizeEdges: Edges;\n    private eventListeners;\n    constructor(renderer: Renderer2, element: ElementRef, zone: NgZone, resizable: ResizableDirective);\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    onMousedown(event: MouseEvent | TouchEvent, clientX: number, clientY: number): void;\n    /**\n     * @hidden\n     */\n    onMouseup(clientX: number, clientY: number): void;\n    private onMousemove;\n    private unsubscribeEventListeners;\n}\n"]}