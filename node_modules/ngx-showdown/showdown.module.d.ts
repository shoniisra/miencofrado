import { ModuleWithProviders } from '@angular/core';
import * as Showdown from 'showdown';
import { ShowdownConfig } from './showdown-config.provider';
/**
 * ### Example
 *
 * Add `ShowdownModule` to app `imports`.
 * ```typescript
 * import { NgModule } from '@angular/core';
 * import { ShowdownModule } from 'ngx-showdown';
 *
 * @NgModule({
 *   imports: [ ShowdownModule ];
 * })
 * export class AppModule {}
 * ```
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './showdown.component';
import * as ɵngcc2 from './showdown.pipe';
import * as ɵngcc3 from './source.directive';
export declare class ShowdownModule {
    /**
     * __Example :__
     *
     * Add `ShowdownModule` to app `imports` with config.
     * ```typescript
     * import { NgModule } from '@angular/core';
     * import { ShowdownModule } from 'ngx-showdown';
     *
     * @NgModule({
     *   imports: [ ShowdownModule.forRoot({
     *     smartIndentationFix: true,
     *     foo: 'bar',
     *     flavor: 'github',
     *     extensions: [ {type:'listener', listeners: {'codeBlocks.after': console.log}} ]
     *   }) ];
     * })
     * export class AppModule {}
     * ```
     * @param config - A root converter config for all converter instances.
     */
    static forRoot(config: ShowdownConfig | Showdown.ConverterOptions): ModuleWithProviders<ShowdownModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ShowdownModule, [typeof ɵngcc1.ShowdownComponent, typeof ɵngcc2.ShowdownPipe, typeof ɵngcc3.SourceDirective], never, [typeof ɵngcc1.ShowdownComponent, typeof ɵngcc2.ShowdownPipe, typeof ɵngcc3.SourceDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ShowdownModule>;
}

//# sourceMappingURL=showdown.module.d.ts.map